Options for f0j_calculations
============================
This section is an autogenerated list of the computation_dicts of all currently available
f0j_sources.


gpaw_mpi
--------

This is the computation dict docstring (automatically copied from .py files)

computation_dict : Dict[str, Any]

contains options for the atomic form factor calculation. The function
will use and exclude the following options from the dictionary and pass
the rest onto the GPAW calculator without further checks.

- save_file (str): Path to the file that is used for saving and 
  loading DFT results, by default 'gpaw_result.gpw'
- gridinterpolation (1, 2, 4): Using GPAWs interpolation this is the 
  factor by which the grid from the wave function will be interpolated
  for the calculation of atomic form factors with FFT. This can be 
  reduced if you run out of memory for this step. Allowed values are
  1, 2, and 4, by default 4
- symm_equiv (str): The atomic form factors of symmetry equivalent
  atoms can be calculated individually for each atom ('individually')
  or they can be calculated once for each atom in the asymmetric unit
  and expanded to the other atoms ('once'), finally they can be 
  averaged between symmetry equivalent atoms and expanded afterwards
  ('averaged'). Once should be sufficient for most structures and 
  saves time. Try one of the other options if you suspect problems,
  by default 'once'
- skip_symm (Dict[int, List[int]]): Can used to prevent the
  expansion of the atom(s) with the index(es) given as dictionary keys
  as given in the construction_instructions with the symmetry
  operations of the indexes given in the list, which correspond to the
  indexes in the symm_mats_vecs object. This has proven to be
  successful for the calculation of atoms disordered on special 
  positions. Can not be used with if symm_equiv is 'individually',
  by default {} 
- magmoms (np.ndarray): Experimental: starting values for magnetic
  moments of atoms. These will be expanded to atoms in the unit cell 
  by just applying the same magnetic moment to all symmetry equivalent
  atoms. This is probably too simplistic and will fail.
- mpicores (Union[int, str]): give the number of cores used for the 
  mpi calculation. If this is 'auto' GPAW will select the number
  itself, by default 'auto'

For the allowed options of the GPAW calculator consult: 
https://wiki.fysik.dtu.dk/gpaw/documentation/basic.html


gpaw
----

This is the computation dict docstring (automatically copied from .py files)

computation_dict : Dict[str, Any]

contains options for the atomic form factor calculation. The function
will use and exclude the following options from the dictionary and pass
the rest onto the GPAW calculator without further checks.

  - save_file (str): Path to the file that is used for saving and 
    loading DFT results, by default 'gpaw_result.gpw'
  - gridinterpolation (1, 2, 4): Using GPAWs interpolation this is the 
    factor by which the grid from the wave function will be interpolated
    for the calculation of atomic form factors with FFT. This can be 
    reduced if you run out of memory for this step. Allowed values are
    1, 2, and 4, by default 4
  - symm_equiv (str): The atomic form factors of symmetry equivalent
    atoms can be calculated individually for each atom ('individually')
    or they can be calculated once for each atom in the asymmetric unit
    and expanded to the other atoms ('once'), finally they can be 
    averaged between symmetry equivalent atoms and expanded afterwards
    ('averaged'). Once should be sufficient for most structures and 
    saves time. Try one of the other options if you suspect problems,
    by default 'once'
  - skip_symm (Dict[int, List[int]]): Can used to prevent the
    expansion of the atom(s) with the index(es) given as dictionary keys
    as given in the construction_instructions with the symmetry
    operations of the indexes given in the list, which correspond to the
    indexes in the symm_mats_vecs object. This has proven to be
    successful for the calculation of atoms disordered on special 
    positions. Can not be used with if symm_equiv is 'individually',
    by default {} 
  - magmoms (np.ndarray): Experimental: starting values for magnetic
    moments of atoms. These will be expanded to atoms in the unit cell 
    by just applying the same magnetic moment to all symmetry equivalent
    atoms. This is probably too simplistic and will fail.

For the allowed options of the GPAW calculator consult: 
https://wiki.fysik.dtu.dk/gpaw/documentation/basic.html


gpaw_spherical
--------------

This is the computation dict docstring (automatically copied from .py files)

computation_dict : Dict[str, Any]

contains options for the atomic form factor calculation. The function
will use and exclude the following options from the dictionary and pass
the rest onto the GPAW calculator without further checks.

  - save_file (str): Path to the file that is used for saving and 
    loading DFT results, by default 'gpaw_result.gpw'

  - spherical_grid (str): Can be used to select a grid. Possible options
    are: coarse, medium, fine, veryfine, ultrafine and insane, by
    by default 'fine'

  - skip_symm (Dict[int, List[int]]): Can used to prevent the
    expansion of the atom(s) with the index(es) given as dictionary keys
    as given in the construction_instructions with the symmetry
    operations of the indexes given in the list, which correspond to the
    indexes in the symm_mats_vecs object. This has proven to be
    successful for the calculation of atoms disordered on special 
    positions. Can only be used with average_symmequiv, by default {} 

  - magmoms (np.ndarray): Experimental: starting values for magnetic
    moments of atoms. These will be expanded to atoms in the unit cell 
    by just applying the same magnetic moment to all symmetry equivalent
    atoms. This is probably too simplistic and will fail.

For the allowed options of the GPAW calculator consult: 
https://wiki.fysik.dtu.dk/gpaw/documentation/basic.html


iam
---

This is the computation dict docstring (automatically copied from .py files)

computation_dict : Dict[str, Any]

There are no options here, will be ignored


qe
--

This is the computation dict docstring (automatically copied from .py files)

computation_dict : Dict[str, Any]

contains options for the atomic form factor calculation. The function
will use and exclude the following options from the dictionary and write
the rest into the quantum-espresso pw.x output file without further
check

  - mpicores (Union[str, int]): The number of cores used for the pw.x
    and pp.x calculation in Quantum Espresso, 'auto' will mpiexec let
    select this option. However sometimes it has proven faster to
    choose a lower number of cores manually
  - symm_equiv (str): The atomic form factors of symmetry equivalent
    atoms can be calculated individually for each atom ('individually')
    or they can be calculated once for each atom in the asymmetric unit
    and expanded to the other atoms ('once'), finally they can be 
    averaged between symmetry equivalent atoms and expanded afterwards
    ('averaged'). Once should be sufficient for most structures and 
    saves time. Try one of the other options if you suspect problems,
    by default 'once'
  - skip_symm (Dict[int, List[int]]): Can used to prevent the
    expansion of the atom(s) with the index(es) given as dictionary keys
    as given in the construction_instructions with the symmetry
    operations of the indexes given in the list, which correspond to the
    indexes in the symm_mats_vecs object. This has proven to be
    successful for the calculation of atoms disordered on special 
    positions. Can not be used with if symm_equiv is 'individually',
    by default {} 

K-points are organised into their own entry 'k_points' which is a dict
'mode' is the selection mode, and 'input' is the output after the 
K_POINTS entry in the pw.x output file.

The other options are organised as subdicts with the naming of the
section in the pw.x input file in lowercase.
For these options consult the pw.x file format documentation at:
https://www.quantum-espresso.org/Doc/INPUT_PW.html



tsc_file
--------

This is the computation dict docstring (automatically copied from .py files)

computation_dict : Dict[str, Any]

Contains options for the .tsc source

- file_name (str): Path to the .tsc file, by default 'to_xharpy.tsc'
- call_function (python function): If this option is not 'none' you can
  pass a function, which will be called in each Hirshfeld cycle. The
  function receives four arguments: labels contrains the atom label for 
  each atom in the asymmetric unit, element_symbols containts the 
  element symbols (e.g. H, Na), positions are the atomic positions in 
  FRACTIONAL coordinates, restart is a bool, which you can check to 
  trigger a start of a calculation from a precalculated density. 
  (Usually you would want to start the first step with a calculation 
  from scratch and then recycle for all other HAR cycles, as the
  differences in posutions get smaller). At the end of the function
  you should write a new .tsc file with the atomic form factors,
  by default 'none'
- call_args (List): If you have a call_function you can use this
  option to pass additional arguments, which will be passed after
  the four default arguments, by default []
- call_kwargs (Dict): If you have a call_function you can use this
  option to pass additional keyword arguments, by default {}
- cif_addition (str): Will be added to the refinement_details section 
  of the cif_file


